<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFwAAABgCAYAAACQVxWOAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAW
        JQAAFiUBSVIk8AAABP1JREFUeF7tnI2x1DYURlVCSqAEOoAOoAPogHRAOkg6CB1QAiVQQkpICcl8b1Zv
        liPZ1pWvZHv3npkzzFz8bPlb/8iydlO6Fr+llN6mlN7f/g0GoaD/SCn9m1L6785/UkqfuPCjkXf+B3a+
        xZ8dAb25Bct13fsn/+hRaNn5FrUOrWsLy/a+3w6Gh6J151vUutYC0jXauj2dQS0f5CX4XNnBvX7lRm4o
        bF6vW209e06Pjh7u3F51HyAeH+xDhM6d8vKe3yv/36vOkI9Y/6XgDnmZUc+H/+ehPsRLwh3xUljC1pH7
        d6W+ptZ/ObgTdAkuR/+q1JZU2PkJUzdc/v+alwudO0CX4HK91m6E1huszozLwMbTJbhcj7WwM9Yu5GX6
        6mw4XYLLWV0LO2N5Im1d5+Gw0XQJLmdRR+Pa0+g9Dxc6G0yX4HKt9oyNaHnLA9r9Tfh0sLF0CS7X4t6b
        27fKOte0jmBOgY2kS3C5LZfGV6xcvtvIBtIa1m6bV9iZS4fOxlFiHRfxDjtjbcdpXmawYfQey6O6HH0N
        1TtQS19do5jWG7Y7bBTNWMKeOaJ3uW4jG0RF77jILC4VOhtDLV2xI3dE27X01dXW2QfGC2xIr0eGndH1
        WQ9WbNuSMy99r7ARPZ4h7HvUI2Eb15z6MoMbt3rWUbrT9tW5YYuWQagjsIY+pa/OjbaqcZEzh53RNdrS
        V+8ZXDNh6U5l9w5CzcY6+WjoZdJyV5ejHtVHc4q+unU84qphZw4N3fKoLq8edqbnZYbGbHZhCfuQh4MJ
        TOurn31cZCbWbqO5r36VcZGZDAndet16lrAz1jdYq93inlG0Zwo70zPxqHhAsnaDqit5Iqx5FQen5Y+H
        P9JeBGvorwep5bq0ek16QqyX4ZdnlNY/eJQHGm901Lb26l6+YsNizQh7m9ZuY1GgEXY7LaEXBRrYYH60
        KNDABvOjRYEGNpgfLQo0sMH8aFGggQ3mR4sCDWwwP1oUaGCD+dGiQAMbzI8WBXomNHah94Z6lacxoDP+
        9hXzo0WBHonGKb7cRii3xqA1JqT3j0d/AGwXLQr0CBR07UfFWtUg0ehvVSzBttCiQGezJ2iqM2P2Wym2
        gRYFOgsF0/NLcVvqw+ueutABt0+LAp2BdU5fj01v0R3gdmlRoKOxvpTd44zQuU1aFOhIdBmZFXZ2dOjc
        Hi0KdBTWl7BZ/Y1uhlLX/J4PbPccwBW4LVoU6Cgs058VsvrjS7MF3hl/B0vrW1rXXrgtWhToCCzTny2v
        +CxnzaivjXA7tChQb1pD0TI9T42WrwSO6KNzG7QoUG9aTn1dl/eG0dKnHzHPhtugRYF6ohC5/pq6Ju9F
        R/rWmaQP1vtazm3QokA90Sgf108t1+wtWrbnPebC9dOiQD3ZmrehI9KbrUvLUwfueXRntu4ZEbgzEfiK
        ETjXtpMIvFKgnkTglQL1JAKvFKgnEXilQD2JwCsF6kkEXilQTyLwSoF6EoFXCtSTCLxSoJ5E4JUC9SQC
        rxSoJxF4pUA9icArBepJBF4pUE8i8EqBehKBVwrUkwi8UjjSIwKfbVE40gh8siMCt/7Q42g3523M9APT
        ckCzbrmdo9Q37TZvZLMcNYVY6+yZQz7Clxt0yxy8GepIHIVlevQof5lV1jqFeJQjrt3kyDNZ2VZnA+vr
        1K2/8rZXneaax+0xU7YVzTdv+Vazl7o/6oN+vVT+D2LJO5aBTFFGAAAAAElFTkSuQmCC
</value>
  </data>
</root>